// import React, { useState } from 'react';
// import { Box, Typography, TextField, Button, DialogActions } from '@mui/material';
// import DrawerComponent from '../components/DrawerComponent';
// import HeaderComponent from '../components/HeaderComponent';
// import axios from 'axios';


// function AddDeveloper() {
//   // State hooks for each form field
//   const [developerName, setDeveloperName] = useState('');
//   const [developerCompanyRegistrationNumber, setDeveloperCompanyRegistrationNumber] = useState('');
//   const [developerRegisteredOfficeAddress, setDeveloperRegisteredOfficeAddress] = useState('');
//   const [developerPlaceOfBusinessAddress, setDeveloperPlaceOfBusinessAddress] = useState('');
//   const [developerFileReferenceNumber, setDeveloperFileReferenceNumber] = useState('');
//   const [developerLicenceNumber, setDeveloperLicenceNumber] = useState('');
//   const [developerContactNumber, setDeveloperContactNumber] = useState('');
//   const [developerEmailAddress, setDeveloperEmailAddress] = useState('');
//   const [developerPersonInChargeName, setDeveloperPersonInChargeName] = useState('');
//   const [developerPersonInChargeContactNumber, setDeveloperPersonInChargeContactNumber] = useState('');
//   const [developerPersonInChargeEmailAddress, setDeveloperPersonInChargeEmailAddress] = useState('');
//   const [developerAuthorised1stSignatoryName, setDeveloperAuthorised1stSignatoryName] = useState('');
//   const [developerAuthorised1stIdentityCardNumber, setDeveloperAuthorised1stIdentityCardNumber] = useState('');
//   const [developerAuthorised1stSignatoryDesignation, setDeveloperAuthorised1stSignatoryDesignation] = useState('');
//   const [developerAuthorised2ndSignatoryName, setDeveloperAuthorised2ndSignatoryName] = useState('');
//   const [developerAuthorised2ndIdentityCardNumber, setDeveloperAuthorised2ndIdentityCardNumber] = useState('');
//   const [developerAuthorised2ndSignatoryDesignation, setDeveloperAuthorised2ndSignatoryDesignation] = useState('');
//   const [value, setValue] = useState(0);
//   const [uploadFile, setUploadFile] = useState<File | null>(null);
//   const [Message, setMessage] = useState<string | null>(null);
//   const [searchQuery, setSearchQuery] = useState('');
//   const handleAddDeveloperSubmit = async () => {
//     const developerData = {
//       developerName,
//       developerCompanyRegistrationNumber,
//       developerRegisteredOfficeAddress,
//       developerPlaceOfBusinessAddress,
//       developerFileReferenceNumber,
//       developerLicenceNumber,
//       developerContactNumber,
//       developerEmailAddress,
//       developerPersonInChargeName,
//       developerPersonInChargeContactNumber,
//       developerPersonInChargeEmailAddress,
//       developerAuthorised1stSignatoryName,
//       developerAuthorised1stIdentityCardNumber,
//       developerAuthorised1stSignatoryDesignation,
//       developerAuthorised2ndSignatoryName,
//       developerAuthorised2ndIdentityCardNumber,
//       developerAuthorised2ndSignatoryDesignation,
//     };

//     try {
        //const apiUrl = process.env.REACT_APP_API_URL;
//       const response = await fetch(`${apiUrl}/add-developer`, {
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json',
//         },
//         body: JSON.stringify(developerData),
//       });

//       const result = await response.json();

//       if (response.ok) {
//         alert('Developer added successfully');
//       } else {
//         alert('Failed to add developer');
//         console.error(result);
//       }
//     } catch (error) {
//       console.error('Error:', error);
//       alert('An error occurred');
//     }
//   };
//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const { name, value } = e.target;
//     setFormData((prev) => ({
//         ...prev,
//         [name]: value,
//     }));
//   };
//   const UploadFile = async (event: React.FormEvent) => {
//     if (!uploadFile) {
//       alert('Please select a file');
//       return;
//     }
//     event.preventDefault();
//     const formData = new FormData();
//     formData.append('uploadFile', uploadFile);
  
//     try {
        //const apiUrl = process.env.REACT_APP_API_URL;
//       const response = await fetch(`${apiUrl}/add-document`, {
//         method: 'POST',
//         body: formData,
//       });
  
//       const result = await response.json();
//       console.log(result)
//       if (response.ok) {
//         alert(result);
//         setFormData(prevFormData => ({
//           ...prevFormData,
//           developerName: response.result.response
//         }));
//       } else {
//         alert('Failed to add document');
//         console.error(result);
//       }
//     } catch (error) {
//       console.error('Error:', error);
//       alert('An error occurred');
//     }
//   }

//   const getData = async (prompt:string, selection:any) => {
//     const formData = new FormData();
//     // Add project details to the form data
//     formData.append('searchQuery', prompt);
    
//     try {
//       const response = await axios.post("http://127.0.0.1:5000/add-document", formData, {
//         headers: {
//           "Content-Type": "multipart/form-data",
//         },
//       });
//       setMessage(response.result.response);
//       switch (selection) {
//         case 'DName':
//             setFormData(prevFormData => ({
//                 ...prevFormData,
//                 developerName: response.result.response
//               }));
//               break
//         case 'RNumber':
//             setFormData(prevFormData => ({
//                 ...prevFormData,
//                 developerCompanyRegistrationNumber: response.data.response
//               }));
//               break     
//         default:
//           return <div>Invalid mode</div>;
//       }
  
//     //   setanalysis_result(response.result.extracted_data); // Extracted data is in 'extracted_data'
//     } catch (error) {
//       alert('Form submitting error');
//       console.error("Error submitting form:", error);
//     }
//   };
//     useEffect(() => {
//     processSearch();       
//     }, []);
//   function delay(ms:any) {
//     return new Promise(resolve => setTimeout(resolve, ms));
//   }
//   async function processSearch() {
//     await getData("get developer/company name only", "DName");
//     await getData("get developer/company registration number only", "RNumber");
//   }
//   return (
//     <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 3, maxWidth: 1000, marginLeft: 40, marginTop: 10, }}>
//         <DrawerComponent />
//         <HeaderComponent />
//       <Typography variant="h4" gutterBottom>
//         Add New Developer
//       </Typography>
//       <Box>
//       <input
//           type="file"
//           onChange={(e) => {
//               if (e.target.files && e.target.files.length > 0) {
//                   setUploadFile(e.target.files[0]);
//               }
//           }}
//           style={{ marginBottom: '16px', width: '180px', }}
//       />
//       <Button variant="contained" color="primary" onClick={UploadFile}>
//         Fill From Doc
//       </Button>
//       {/* <Button variant="contained" color="primary" onClick={handleAddDeveloperSubmit}>
//         Fill document data
//       </Button> */}
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="Developer Name"
//         fullWidth
//         variant="outlined"
//         value={developerName}
//         onChange={(e) => setDeveloperName(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="Company Registration Number"
//         fullWidth
//         variant="outlined"
//         value={developerCompanyRegistrationNumber}
//         onChange={(e) => setDeveloperCompanyRegistrationNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="Registered Office Address"
//         fullWidth
//         variant="outlined"
//         value={developerRegisteredOfficeAddress}
//         onChange={(e) => setDeveloperRegisteredOfficeAddress(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="Place of Business Address"
//         fullWidth
//         variant="outlined"
//         value={developerPlaceOfBusinessAddress}
//         onChange={(e) => setDeveloperPlaceOfBusinessAddress(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//        </Box>
//        <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="File Reference Number"
//         fullWidth
//         variant="outlined"
//         value={developerFileReferenceNumber}
//         onChange={(e) => setDeveloperFileReferenceNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="Licence Number"
//         fullWidth
//         variant="outlined"
//         value={developerLicenceNumber}
//         onChange={(e) => setDeveloperLicenceNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//        </Box>
//        <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="Contact Number"
//         fullWidth
//         variant="outlined"
//         value={developerContactNumber}
//         onChange={(e) => setDeveloperContactNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="Email Address"
//         fullWidth
//         variant="outlined"
//         value={developerEmailAddress}
//         onChange={(e) => setDeveloperEmailAddress(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="Person in Charge Name"
//         fullWidth
//         variant="outlined"
//         value={developerPersonInChargeName}
//         onChange={(e) => setDeveloperPersonInChargeName(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="Person in Charge Contact Number"
//         fullWidth
//         variant="outlined"
//         value={developerPersonInChargeContactNumber}
//         onChange={(e) => setDeveloperPersonInChargeContactNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="Person in Charge Email Address"
//         fullWidth
//         variant="outlined"
//         value={developerPersonInChargeEmailAddress}
//         onChange={(e) => setDeveloperPersonInChargeEmailAddress(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="1st Authorised Signatory Name"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised1stSignatoryName}
//         onChange={(e) => setDeveloperAuthorised1stSignatoryName(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="1st Authorised Signatory Identity Card Number"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised1stIdentityCardNumber}
//         onChange={(e) => setDeveloperAuthorised1stIdentityCardNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="1st Authorised Signatory Designation"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised1stSignatoryDesignation}
//         onChange={(e) => setDeveloperAuthorised1stSignatoryDesignation(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="2nd Authorised Signatory Name"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised2ndSignatoryName}
//         onChange={(e) => setDeveloperAuthorised2ndSignatoryName(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       <TextField
//         label="2nd Authorised Signatory Identity Card Number"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised2ndIdentityCardNumber}
//         onChange={(e) => setDeveloperAuthorised2ndIdentityCardNumber(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>
//       <Box sx={{ display: 'flex', gap: 2, width: '100%', marginBottom: 2 }}>
//       <TextField
//         label="2nd Authorised Signatory Designation"
//         fullWidth
//         variant="outlined"
//         value={developerAuthorised2ndSignatoryDesignation}
//         onChange={(e) => setDeveloperAuthorised2ndSignatoryDesignation(e.target.value)}
//         sx={{ marginBottom: 2 }}
//       />
//       </Box>

//       <DialogActions>
//         <Button variant="contained" color="primary" onClick={handleAddDeveloperSubmit}>
//           Submit
//         </Button>
//       </DialogActions>
//     </Box>
//   );
// }

// export default AddDeveloper;
